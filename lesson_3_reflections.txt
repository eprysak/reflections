When would you want to use a remote repository rather than keeping all your work local?

I would use a remote repository if I were to work on my code from a different computer or if I didn't have access to my local computer.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Pulling manually gives you more control over when you should pull all of the changes made. Sometimes you are working with a group where multiple people are making changes, and it can get messy if too many changes are being made at once.
Pulling manually helps you control the changes that you want in your local repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Branches are used locally when you want to write a write a slightly different piece of code within your current code without impacting the original code.
Clones are used when you want to copy code from a remote to your local repository that can be pushed back to the original remote.
Forks are used when you want to copy code from another person's remote and make your own changes to be pushed back to your version of the remote, rather than changing the original remote.

What is the benefit of having a copy of the last known state of the remote stored locally?

You can view changes made on the remote while you do not have internet access, and compare with the local repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

It would be harder because you would not be able to keep track of changes made by others in the way that GitHub allows.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Making a change in a separate branch allows for the master code to remain unchanged while an experimental branch can be played with and new code can be added.
